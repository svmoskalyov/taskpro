{"version":3,"file":"static/js/524.31e70022.chunk.js","mappings":"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","sources":["webpack://taskpro/./src/components/Header/Header.module.scss?6eb7","webpack://taskpro/./src/components/Header/SelectTheme/SelectTheme.module.scss?dc9e","components/Header/SelectTheme/OutsideClicker.jsx","components/Header/SelectTheme/SelectTheme.jsx","webpack://taskpro/./src/components/Header/Profile/Profile.module.scss?b4dd","components/Header/Profile/Profile.jsx","webpack://taskpro/./src/components/Header/ProfileModal/ProfileModal.module.scss?9b06","components/Header/ProfileModal/ProfileModal.jsx","services/themes.js","components/Header/Header.jsx","webpack://taskpro/./src/components/LogoComponent/LogoComponent.module.scss?f9d9","components/LogoComponent/LogoComponent.jsx","components/Forms/NewBoardAndEditBoard/NewBoardForm.jsx","webpack://taskpro/./src/components/Forms/NeedHelp/NeedHelp.module.scss?7fbf","components/Forms/NeedHelp/NeedHelp.jsx","webpack://taskpro/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Forms/NewBoardAndEditBoard/EditBoard.jsx","components/Sidebar/Sidebar.jsx","webpack://taskpro/./src/components/Bord/WelcomePageBoard/WelcomePageBoard.module.scss?27ac","components/Bord/WelcomePageBoard/WelcomePageBoard.jsx","webpack://taskpro/./src/pages/HomePage/HomePage.module.scss?bae6","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__OKWO7\",\"container\":\"Header_container__TsUVY\",\"menu\":\"Header_menu__iSxy+\",\"icon\":\"Header_icon__a8FkJ\",\"modalContainer\":\"Header_modalContainer__GF0jM\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectTheme_container__r7-AJ\",\"select\":\"SelectTheme_select__8wmg7\",\"selectContainer\":\"SelectTheme_selectContainer__7WLE1\",\"header\":\"SelectTheme_header__ZvlpG\",\"icon\":\"SelectTheme_icon__R1psC\",\"rotate\":\"SelectTheme_rotate__dNDwZ\",\"svg\":\"SelectTheme_svg__Hjzi-\",\"list\":\"SelectTheme_list__DAEHj\",\"active\":\"SelectTheme_active__l-6bo\",\"listItem\":\"SelectTheme_listItem__J0eR1\",\"current\":\"SelectTheme_current__DFjtF\"};","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n  const wrapperRef = useRef(null);\n  let { isActive, setActive } = props;\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setActive((isActive = false));\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}","import clsx from 'clsx';\nimport css from './SelectTheme.module.scss';\nimport { useState } from \"react\";\nimport './SelectTheme.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { OutsideClicker } from './OutsideClicker';\n\nexport const SelectTheme = ({selectHandler, userTheme, setSelectedTheme}) => {\n    const [isActive, setActive] = useState(false);\n    \n    const handleClick = (event) => {\n        const evtParent = event.currentTarget.parentElement;\n        evtParent.children[1].classList.toggle('active');\n        evtParent.children[0].children[1].classList.toggle('rotate');\n        \n        setActive(!isActive);\n    }\n\n    const handleSelect = (event) => {\n        const theme = event.target.innerText.toLowerCase();\n        setSelectedTheme(theme);\n        selectHandler(theme);\n    }\n\n    const themeCheckHandler = () => {\n        return userTheme.length === 0 ? 'dark' : userTheme;\n    }\n\n    return (\n        <OutsideClicker isActive={isActive} setActive={setActive}>\n            <div className={css.container}>   \n                <div className={css.select}>\n                    <div className={css.selectContainer} onClick={handleClick}>\n                        <p className={css.header}>Theme</p>\n                        <div className={clsx(css.icon, [isActive && css.rotate])}>\n                            <svg className={css.svg}>\n                                <use href={sprite + '#icon-arrow-down'}></use>\n                            </svg>\n                        </div>\n                    </div>\n                    \n                    <ul className={clsx(css.list, [isActive && css.active])} \n                        onClick={event => {\n                            handleClick(event);\n                            handleSelect(event);\n                    }}>\n                        <li key={1} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'light'\n                        })}>\n                            <p>Light</p>\n                        </li>\n                        <li key={2} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'dark'\n                        })}>\n                            <p>Dark</p>\n                        </li>\n                        <li key={3} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'violet'\n                        })}>\n                            <p>Violet</p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </OutsideClicker>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__OBYQH\",\"name\":\"Profile_name__9EFSA\",\"avatarContainer\":\"Profile_avatarContainer__VuBqv\",\"svg\":\"Profile_svg__uWmy7\",\"img\":\"Profile_img__WBvF+\"};","import css from './Profile.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { useSelector } from 'react-redux';\nimport { selectName } from 'redux/auth/authSelectors';\n\nexport const Profile = ({ modalHandler, avatar, userAvatar }) => {\n    const name = useSelector(selectName);\n\n    const checkAvatar = () => {\n        if (avatar && avatar?.length > 0) {\n            return avatar;\n        }\n        return userAvatar;\n    }\n\n    return (\n        <div className={css.container}>\n            <div className={css.tooltip}>\n                <p></p>\n            </div>\n            <p className={css.name}>{name}</p>\n            <div className={css.avatarContainer} onClick={modalHandler}>\n                {userAvatar?.length === 0 && !avatar ? (\n                    <svg className={css.svg}>\n                        <use href={sprite + '#user-avatar-icon'}></use>\n                    </svg>\n                ) : (\n                    <img className={css.img} src={`${checkAvatar()}`} alt=\"Avatar\" />\n                )}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ProfileModal_modal__uUk-c\",\"header\":\"ProfileModal_header__p2Gkw\",\"imageContainer\":\"ProfileModal_imageContainer__TkbH5\",\"svg\":\"ProfileModal_svg__R5DnF\",\"image\":\"ProfileModal_image__riVrJ\",\"addImg\":\"ProfileModal_addImg__7yF92\",\"label\":\"ProfileModal_label__anism\",\"labelSvg\":\"ProfileModal_labelSvg__p6IXF\",\"addFile\":\"ProfileModal_addFile__amgiz\",\"passLabel\":\"ProfileModal_passLabel__ee77g\",\"input\":\"ProfileModal_input__Bkn-5\",\"iconEye\":\"ProfileModal_iconEye__cCPGf\",\"errorMessage\":\"ProfileModal_errorMessage__EFQxM\",\"button\":\"ProfileModal_button__N+D4X\"};","import { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport InputField from 'shared/components/InputField/InputField';\nimport * as yup from 'yup';\nimport css from './ProfileModal.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser, updateAvatar } from 'redux/auth/authOperations';\nimport sprite from '../../../assets/icons/icons.svg';\nimport clsx from 'clsx';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Username must be at least 2 characters')\n    .max(64, 'Username must be less than or equal to 64 characters')\n    .required('Username is a required field'),\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be less than or equal to 64 characters')\n    .required('Password is a required field'),\n});\n\nexport const ProfileModal = ({ modalHandler, avatar, userAvatar }) => {\n  const [image, setImage] = useState(null);\n  const [showPass, setShowPass] = useState('password');\n  const dispatch = useDispatch();\n  const userObj = useSelector(selectUser);\n\n  const InitalVelues = {\n    name: userObj.name,\n    email: userObj.email,\n    password: '',\n  };\n\n  useEffect(() => {\n    if (image) {\n      const formData = new FormData();\n      formData.append('avatar', image);\n\n      if(image.size > 1040000) return alert('Maximum image size is 1MB');\n\n      dispatch(updateAvatar(formData));\n      setImage(null);\n    }\n  }, [image, dispatch]);\n\n  const submitHandler = (values, { resetForm }) => {\n    dispatch(\n      updateUser({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n\n    resetForm();\n    modalHandler();\n  };\n\n  const handleFileSelect = evt => {\n    setImage(evt.target.files[0]);\n  };\n\n  const checkAvatar = () => {\n    if (avatar && avatar.length > 0) {\n        return avatar;\n    }\n    return userAvatar;\n  }\n\n  return (\n    <div className={css.modal}>\n      <div className={css.imageContainer}>\n        {userAvatar.length === 0 && !avatar ? (\n          <svg className={css.svg}>\n            <use href={sprite + '#user-avatar-icon'}></use>\n          </svg>\n        ) : (\n          <div className={css.image}>\n            <img className={css.img} src={checkAvatar()} alt=\"Avatar\" />\n          </div>\n        )}\n        <div className={css.addImg}>\n          <label className={css.label} htmlFor=\"inputAddFile\">\n            <svg className={css.labelSvg}>\n                <use href={sprite + \"#icon-btn-plus\"}></use>\n            </svg>\n          </label>\n          <input\n            className={css.addFile}\n            id=\"inputAddFile\"\n            type=\"file\"\n            accept=\"image/png, image/jpeg\"\n            placeholder=\"\"\n            onChange={handleFileSelect}\n          />\n        </div>\n      </div>\n\n      <Formik\n        initialValues={InitalVelues}\n        validationSchema={schema}\n        onSubmit={submitHandler}\n      >\n        <Form>\n          <InputField name=\"name\" placeholder=\"Enter name\" />\n          <InputField name=\"email\" placeholder=\"Enter email\" value=\"hello\" />\n          <label htmlFor=\"updatePassInput\" className={css.passLabel}>\n          {showPass === 'password' ? (\n                <svg className={css.iconEye} onClick={() => setShowPass('text')}>\n                    <use href={sprite + \"#icon-eye-blocked\"}></use>\n                </svg>\n            ) : (\n                <svg className={clsx({\n                    [css.iconEye] : true,\n                    [css.iconEyeOpen] : showPass === 'text'\n                })} onClick={() => setShowPass('password')}>\n                    <use href={sprite + \"#icon-eye\"}></use>\n                </svg>\n            )}\n            <Field \n                id='updatePassInput'\n                name=\"password\" \n                placeholder=\"Enter password\" \n                type={showPass} \n                className={css.input}\n            />\n            \n            <ErrorMessage name=\"password\" component=\"span\" className={css.errorMessage} />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Send\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","export let themes = {\n    dark: {\n        primaryBackground: '#121212',\n        secondaryBackground: '#1F1F1F',\n        headerBackground: '#161616',\n        primaryTextColor: '#FFFFFF',\n        secondaryTextColor: 'rgba(255, 255, 255, 0.5)',\n        boardHeaders: '#FFFFFF',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#121212',\n        selectHeader: 'rgba(255, 255, 255, 0.8)',\n        selectOption: 'rgba(255, 255, 255, 0.5)',\n        selectListBg: '#151515',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#151515',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        btnModalTextColor: \"#161616\",\n        cardBg: \"#121212\",\n        boardAddColumnBtn: \"#FFFFFF\",\n        boardAddColumnPlus: \"#121212\",\n        headerModalBtnAddFile: \"#BEDBB0\",\n        sidebarBoardActiveBg: \"#1F1F1F\",\n        sidebarHelpWrapperBg: \"#1F1F1F\",\n        sidebarButtonCreateBg: \"#BEDBB0\",\n        sidebarButtonIconPlus: \"#121212\",\n        sidebarBoardItemHover: \"#404040\",\n        sidebarTextColorMain: \"#FFF\",\n        btnHoverMain:\"#a8cf96\",\n        btnActiveMain: \"#8bbf73\",\n        btnHoverSecondary: \"#595959\",\n        btnActiveSecondary: \"#333333\",\n        sidebarTextColorSecondary: \"rgba(255, 255, 255, 0.50)\",\n        priorityWithoutPriority: \"rgba(255, 255, 255, 0.3)\",\n        scrollHandler: \"rgba(255, 255, 255, 0.10)\",\n        scrollTrack: \"#161616\",\n    },\n    light: {\n        primaryBackground: '#FFFFFF',\n        secondaryBackground: '#F6F6F7',\n        headerBackground: '#FCFCFC',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616B2',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#161616',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#121212\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#BEDBB0\",\n        sidebarBoardActiveBg: \"#F6F6F7\",\n        sidebarHelpWrapperBg: \"#F6F6F7\",\n        sidebarButtonCreateBg: \"#BEDBB0\",\n        sidebarButtonIconPlus: \"#121212\",\n        sidebarBoardItemHover: \"#e4e4e7\",\n        sidebarTextColorMain: \"#161616\",\n        sidebarTextColorSecondary: \"rgba(22, 22, 22, 0.50)\",\n        btnHoverMain: \"#a8cf96\",\n        btnActiveMain: \"#8bbf73\",\n        btnHoverSecondary: \"#404040\",\n        btnActiveSecondary: \"#737373\",\n        priorityWithoutPriority: \"rgba(22, 22, 22, 0.30)\",\n        scrollHandler: \"rgba(22, 22, 22, 0.30)\",\n        scrollTrack: \"rgba(22, 22, 22, 0.20)\",\n    },\n    violet: {\n        primaryBackground: '#5255BC',\n        secondaryBackground: '#ECEDFD',\n        headerBackground: '#FFFFFF',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616',\n        btnBg: '#5255BC',\n        btnTextColor: '#FFFFFF',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#ECEDFD',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#161616',\n        btnModalBg: \"#FFFFFF\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#5255BC\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#ECEDFD\",\n        sidebarBoardActiveBg: \"rgba(255, 255, 255, 0.21)\",\n        sidebarHelpWrapperBg: \"rgba(236, 237, 253, 0.40)\",\n        sidebarButtonCreateBg: \"#B8BCFD\",\n        sidebarButtonIconPlus: \"#FFFFFF\",\n        sidebarBoardItemHover: \"rgba(217, 217, 217, 0.5)\",\n        sidebarTextColorMain: \"#FFF\",\n        sidebarTextColorSecondary: \"rgba(255, 255, 255, 0.50)\",\n        btnHoverMain: \"#6c6fc6\",\n        btnActiveMain: \"#4044a5\",\n        btnHoverSecondary: \"#6c6fc6\",\n        btnActiveSecondary: \"#4044a5\",\n        priorityWithoutPriority: \"rgba(22, 22, 22, 0.30)\",\n        scrollHandler: \"#B8BCFD\",\n        scrollTrack: \"#FFFFFF\",\n    }\n}\n// --btn-hover-main: #a8cf96;\n// --btn-active-main: #8bbf73;\nexport const selectHandler = (theme) => {\n    const root = document.querySelector(':root');\n\n    root.style.setProperty('--primary-background', themes[theme].primaryBackground);\n    root.style.setProperty('--secondary-background', themes[theme].secondaryBackground );\n    root.style.setProperty('--header-background', themes[theme].headerBackground);\n    root.style.setProperty('--primary-text-color', themes[theme].primaryTextColor);\n    root.style.setProperty('--secondary-text-color', themes[theme].secondaryTextColor);\n    root.style.setProperty('--board-headers', themes[theme].boardHeaders);\n    root.style.setProperty('--btn-bg', themes[theme].btnBg);\n    root.style.setProperty('--btn-text-color', themes[theme].btnTextColor);\n    root.style.setProperty('--select-header', themes[theme].selectHeader);\n    root.style.setProperty('--select-option', themes[theme].selectOption);\n    root.style.setProperty('--select-list-bg', themes[theme].selectListBg);\n    root.style.setProperty('--select-list-border', themes[theme].selectListBorder);\n    root.style.setProperty('--modal-background', themes[theme].modalBackground);\n    root.style.setProperty('--btn-modal-icon-plus', themes[theme].btnModalIconPlus);\n    root.style.setProperty('--btn-modal-bg', themes[theme].btnModalBg);\n    root.style.setProperty('--btn-modal-text-color', themes[theme].btnModalTextColor);\n    root.style.setProperty('--card-bg', themes[theme].cardBg);\n    root.style.setProperty('--board-add-column-btn', themes[theme].boardAddColumnBtn);\n    root.style.setProperty('--board-add-column-plus', themes[theme].boardAddColumnPlus);\n    root.style.setProperty('--header-modal-btn-add-file', themes[theme].headerModalBtnAddFile);\n    root.style.setProperty('--sidebar-board-active-bg', themes[theme].sidebarBoardActiveBg);\n    root.style.setProperty('--sidebar-help-wrapper-bg', themes[theme].sidebarHelpWrapperBg);\n    root.style.setProperty('--sidebar-button-create-bg', themes[theme].sidebarButtonCreateBg);\n    root.style.setProperty('--sidebar-button-icon-plus', themes[theme].sidebarButtonIconPlus);\n    root.style.setProperty('--sidebar-board-item-hover', themes[theme].sidebarBoardItemHover);\n    root.style.setProperty('--sidebar-text-color-main', themes[theme].sidebarTextColorMain);\n    root.style.setProperty('--sidebar-text-color-secondary', themes[theme].sidebarTextColorSecondary);\n    root.style.setProperty('--btn-hover-main', themes[theme].btnHoverMain);\n    root.style.setProperty('--btn-active-main', themes[theme].btnActiveMain);\n    root.style.setProperty('--btn-hover-secondary', themes[theme].btnHoverSecondary);\n    root.style.setProperty('--btn-active-secondary', themes[theme].btnActiveSecondary);\n    root.style.setProperty('--priority-without-priority', themes[theme].priorityWithoutPriority);\n    root.style.setProperty('--scroll-handler', themes[theme].scrollHandler);\n    root.style.setProperty('--scroll-track', themes[theme].scrollTrack);\n}","import css from './Header.module.scss';\nimport { SelectTheme } from './SelectTheme/SelectTheme';\nimport { Profile } from './Profile/Profile';\nimport { ProfileModal } from './ProfileModal/ProfileModal';\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUserTheme,\n  selectAvatar,\n  selectUserAvatar,\n} from 'redux/auth/authSelectors';\nimport Modal from 'components/Modal/Modal';\nimport { useDispatch } from 'react-redux';\nimport { switchTheme } from 'redux/auth/authOperations';\nimport { toggleSidebar } from 'redux/board/boardOperations';\n\nimport sprite from '../../assets/icons/icons.svg';\nimport { selectHandler } from '../../services/themes';\n\nexport const Header = () => {\n  const userTheme = useSelector(selectUserTheme);\n  const userAvatar = useSelector(selectUserAvatar);\n  const avatar = useSelector(selectAvatar);\n  const [selectedTheme, setSelectedTheme] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userTheme) selectHandler(userTheme);\n  }, [userTheme]);\n\n  useEffect(() => {\n    if (selectedTheme) {\n      selectHandler(selectedTheme);\n      dispatch(switchTheme(selectedTheme));\n    }\n    return;\n  }, [selectedTheme, dispatch]);\n\n  const modalHandler = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    <header className={css.header}>\n      <div className={css.menu} onClick={() => dispatch(toggleSidebar(true))}>\n        <svg className={css.icon}>\n          <use href={sprite + '#icon-burger-menu'}></use>\n        </svg>\n      </div>\n      <div className={css.container}>\n        <SelectTheme\n          selectHandler={selectHandler}\n          userTheme={userTheme}\n          selectedTheme={selectedTheme}\n          setSelectedTheme={setSelectedTheme}\n        ></SelectTheme>\n        <Profile\n          modalHandler={modalHandler}\n          avatar={avatar}\n          userAvatar={userAvatar}\n        ></Profile>\n      </div>\n      {isModalOpen && (\n        <Modal title={'Edit profile'} closeModal={modalHandler}>\n          <ProfileModal\n            modalHandler={modalHandler}\n            avatar={avatar}\n            userAvatar={userAvatar}\n          ></ProfileModal>\n        </Modal>\n      )}\n    </header>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"iconBg\":\"LogoComponent_iconBg__upuL2\",\"violet\":\"LogoComponent_violet__-Nw79\",\"icon\":\"LogoComponent_icon__K3ESn\"};","import Icon from 'components/Icon/Icon';\nimport st from './LogoComponent.module.scss';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\n\nexport const LogoComponent = () => {\n  const theme = useSelector(selectUserTheme)\n  return (\n    <div className={clsx(st.iconBg, theme === \"violet\" && st.violet)}>\n      <Icon name={'icon-iconlogo'} width={32} height={32} secondaryClassName={clsx(st.icon, theme === \"violet\" && st.violet)}/>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\nimport { createNewBoard } from 'redux/board/boardOperations';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\nimport defaultBgWhite from '../../../static/images/bgIcons/defaultBgWhite.png';\nconst initialsValue = {\n  title: '',\n};\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst NewBoard = ({ closeModal }) => {\n  const [icon, setIcon] = useState('project');\n  const [bg, setBg] = useState('defaultBg');\n  const theme = useSelector(selectUserTheme);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      createNewBoard({ title: values.title, icon: icon, background: bg })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={initialsValue}\n    >\n      <Form>\n        <InputField name=\"title\" placeholder=\"Title\" />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'project',\n              'star',\n              'loading',\n              'puzzle',\n              'container',\n              'lightnight',\n              'colors',\n              'hexagon',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      colors: (\n                        <Icon\n                          name={theme === 'dark' ? 'colors' : 'colors-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name={theme === 'dark' ? 'hexagon' : 'hexagon-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      project: (\n                        <Icon\n                          name={theme === 'dark' ? 'project' : 'project-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'container' : 'container-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'lightnight' : 'lightnight-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name={theme === 'dark' ? 'loading' : 'loading-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name={theme === 'dark' ? 'puzzle' : 'puzzle-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name={theme === 'dark' ? 'star' : 'star-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBalloon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg:\n                        theme === 'dark' ? (\n                          <BgIcon name={defaultBg} alt={defaultBg} />\n                        ) : (\n                          <BgIcon name={defaultBgWhite} alt=\"icon\" />\n                        ),\n                      flowers: <BgIcon name={flowers} alt=\"icon\" />,\n                      leaves: <BgIcon name={leaves} alt=\"icon\" />,\n                      mountainsAndBalloon: (\n                        <BgIcon name={mountainsAndBalloon} alt=\"icon\" />\n                      ),\n                      nature: <BgIcon name={nature} alt=\"icon\" />,\n                      oceanAndYacht: <BgIcon name={oceanAndYacht} alt=\"icon\" />,\n                      orangePlanet: <BgIcon name={orangePlanet} alt=\"icon\" />,\n                      planets: <BgIcon name={planets} alt=\"icon\" />,\n\n                      rocksAndOcean: <BgIcon name={rocksAndOcean} alt=\"icon\" />,\n                      sakura: <BgIcon name={sakura} alt=\"icon\" />,\n                      sky: <BgIcon name={sky} alt=\"icon\" />,\n                      skyBalloons: <BgIcon name={skyBalloons} alt=\"icon\" />,\n                      starsAndShine: <BgIcon name={starsAndShine} alt=\"icon\" />,\n                      trailerInTheCanyon: (\n                        <BgIcon name={trailerInTheCanyon} alt=\"icon\" />\n                      ),\n                      yacht: <BgIcon name={yacht} alt=\"icon\" />,\n                      youngMonth: <BgIcon name={youngMonth} alt=\"icon\" />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={\n                    theme === 'violet'\n                      ? {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #5255BC',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                      : {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #BEDBB0',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                  }\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Create\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NewBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NeedHelp_title__84d0P\",\"label\":\"NeedHelp_label__3X2O7\",\"textarea\":\"NeedHelp_textarea__+QoR6\",\"errorMessage\":\"NeedHelp_errorMessage__YwA2C\",\"button\":\"NeedHelp_button__lgwfC\"};","/* eslint-disable no-unused-vars */\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport InputField from 'shared/components/InputField/InputField';\nimport s from './NeedHelp.module.scss';\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  comment: yup.string().trim().required('Comment is a required field'),\n});\nconst initialValues = {\n  email: '',\n  comment: '',\n};\nconst NeedHelp = ({ closeModal }) => {\n  const hendleSubmit = (values, { resetForm }) => {\n    const obj = {\n      email: values.email,\n      comment: values.comment,\n    };\n    closeModal();\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={hendleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <InputField name=\"email\" placeholder=\"Email address\" />\n        <label className={s.label}>\n          <Field\n            as=\"textarea\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            className={s.textarea}\n          />\n          <ErrorMessage\n            name=\"comment\"\n            component=\"span\"\n            className={s.errorMessage}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Send\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NeedHelp;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Sidebar_container__tRE6e\",\"sectionTop\":\"Sidebar_sectionTop__kXrut\",\"logoWrap\":\"Sidebar_logoWrap__fIZIy\",\"logoText\":\"Sidebar_logoText__j+pLJ\",\"boardsTitle\":\"Sidebar_boardsTitle__EnqDF\",\"createBoard\":\"Sidebar_createBoard__Vww8s\",\"buttonCreate\":\"Sidebar_buttonCreate__5kUMF\",\"sectionBoards\":\"Sidebar_sectionBoards__iwH2u\",\"boardsList\":\"Sidebar_boardsList__n6qaq\",\"boardItem\":\"Sidebar_boardItem__-Gzo2\",\"boardItemActive\":\"Sidebar_boardItemActive__MHmWx Sidebar_boardItem__-Gzo2\",\"boardName\":\"Sidebar_boardName__o2iew\",\"boardEditIcons\":\"Sidebar_boardEditIcons__6bzF5\",\"helpWrapper\":\"Sidebar_helpWrapper__bCJj5\",\"helpSend\":\"Sidebar_helpSend__ZNI1k\",\"helpText\":\"Sidebar_helpText__YwZd4\",\"violet\":\"Sidebar_violet__8qKJx\",\"btnLogout\":\"Sidebar_btnLogout__FPSmN\",\"icons\":\"Sidebar_icons__AoxeN\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport { updateBoardById } from 'redux/board/boardOperations';\nimport { selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\nimport defaultBgWhite from '../../../static/images/bgIcons/defaultBgWhite.png';\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst EditBoard = ({ closeModal, boardToEdit }) => {\n  const [icon, setIcon] = useState(boardToEdit[0].icon);\n  const [bg, setBg] = useState(boardToEdit[0].background);\n  const currentBoardId = useSelector(selectCurrentBoardId);\n  const theme = useSelector(selectUserTheme);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      updateBoardById({\n        id: currentBoardId,\n        data: {\n          title: values.title,\n          icon: icon,\n          background: bg,\n        },\n      })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{ title: boardToEdit[0].title }}\n    >\n      <Form>\n        <InputField\n          name=\"title\"\n          placeholder=\"Title\"\n          value={boardToEdit[0].title}\n        />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'project',\n              'star',\n              'loading',\n              'puzzle',\n              'container',\n              'lightnight',\n              'colors',\n              'hexagon',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      project: (\n                        <Icon\n                          name={theme === 'dark' ? 'project' : 'project-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      colors: (\n                        <Icon\n                          name={theme === 'dark' ? 'colors' : 'colors-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name={theme === 'dark' ? 'hexagon' : 'hexagon-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'container' : 'container-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'lightnight' : 'lightnight-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name={theme === 'dark' ? 'loading' : 'loading-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name={theme === 'dark' ? 'puzzle' : 'puzzle-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name={theme === 'dark' ? 'star' : 'star-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBalloon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg:\n                        theme === 'dark' ? (\n                          <BgIcon name={defaultBg} alt={defaultBg} />\n                        ) : (\n                          <BgIcon name={defaultBgWhite} alt=\"icon\" />\n                        ),\n                      flowers: <BgIcon name={flowers} alt={flowers} />,\n                      leaves: <BgIcon name={leaves} alt={leaves} />,\n                      mountainsAndBalloon: (\n                        <BgIcon\n                          name={mountainsAndBalloon}\n                          alt={mountainsAndBalloon}\n                        />\n                      ),\n                      nature: <BgIcon name={nature} alt={nature} />,\n                      oceanAndYacht: (\n                        <BgIcon name={oceanAndYacht} alt={oceanAndYacht} />\n                      ),\n                      orangePlanet: (\n                        <BgIcon name={orangePlanet} alt={orangePlanet} />\n                      ),\n                      planets: <BgIcon name={planets} alt={planets} />,\n\n                      rocksAndOcean: (\n                        <BgIcon name={rocksAndOcean} alt={rocksAndOcean} />\n                      ),\n                      sakura: <BgIcon name={sakura} alt={sakura} />,\n                      sky: <BgIcon name={sky} alt={sky} />,\n                      skyBalloons: (\n                        <BgIcon name={skyBalloons} alt={skyBalloons} />\n                      ),\n                      starsAndShine: (\n                        <BgIcon name={starsAndShine} alt={starsAndShine} />\n                      ),\n                      trailerInTheCanyon: (\n                        <BgIcon\n                          name={trailerInTheCanyon}\n                          alt={trailerInTheCanyon}\n                        />\n                      ),\n                      yacht: <BgIcon name={yacht} alt={yacht} />,\n                      youngMonth: <BgIcon name={youngMonth} alt={youngMonth} />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={\n                    theme === 'violet'\n                      ? {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #5255BC',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                      : {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #BEDBB0',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                  }\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Edit\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default EditBoard;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import { Button } from '@mui/material';\nimport cactus from '../../static/images/cactus.png';\nimport { LogoComponent } from 'components/LogoComponent/LogoComponent';\nimport NewBoard from 'components/Forms/NewBoardAndEditBoard/NewBoardForm';\nimport NeedHelp from 'components/Forms/NeedHelp/NeedHelp';\nimport Modal from 'components/Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport IconBtn from 'components/IconBtn/IconBtn';\nimport { logOutUser } from 'redux/auth/authOperations';\nimport st from './Sidebar.module.scss';\nimport {\n  deleteBoardById,\n  getAllBoards,\n  getBoardById,\n} from 'redux/board/boardOperations';\nimport EditBoard from 'components/Forms/NewBoardAndEditBoard/EditBoard';\nimport { selectBoards, selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport { selectName, selectUserTheme } from 'redux/auth/authSelectors';\nimport clsx from 'clsx';\nimport ButtonDelete from 'components/Modal/ButtonDelete';\nimport { useScrollBar } from 'hooks/useScrollBar';\n\nexport const Sidebar = () => {\n  const boards = useSelector(selectBoards);\n  const theme = useSelector(selectUserTheme);\n  const isLoggedIn = useSelector(selectName);\n  const currentBoard = useSelector(selectCurrentBoardId);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [addBoardModal, setAddBoardModal] = useState(false);\n  const [needHelpModalOpen, setNeedHelpModalOpen] = useState(false);\n  const [editBoardModal, setEditBoardModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [activeItemId, setActiveItemId] = useState(null);\n  const [boardToEdit, setBoardToEdit] = useState(null);\n  const boardWrapper = useRef(null);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(getAllBoards());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (boards.length === 0) {\n      return;\n    }\n    if (!currentBoard) {\n      setActiveItemId(boards[0]._id);\n      const newTitle = boards[0].title.split(' ').join('-').toLowerCase();\n      navigate(`/home/${newTitle}`);\n    }\n  }, [boards, currentBoard, navigate]);\n\n  useEffect(() => {\n    dispatch(getBoardById(activeItemId));\n  }, [activeItemId, dispatch]);\n\n  const handleAddBoard = () => setAddBoardModal(!addBoardModal);\n\n  const handleNeedHelp = () => setNeedHelpModalOpen(!needHelpModalOpen);\n\n  const handleEditBoardModal = () => setEditBoardModal(!editBoardModal);\n\n  const handleDeleteModal = () => setDeleteModal(!deleteModal);\n\n  const handleChangeActive = (id, title) => {\n    setActiveItemId(id);\n\n    const newTitle = title.split(' ').join('-').toLowerCase();\n    navigate(`/home/${newTitle}`);\n  };\n\n  const handleEditBoard = id => {\n    setBoardToEdit(boards.filter(el => el._id === currentBoard));\n    handleEditBoardModal();\n  };\n\n  const handleDeleteBoard = id => {\n    dispatch(deleteBoardById(id));\n    dispatch(getBoardById(null));\n  };\n\n  const handleLogout = () => {\n    dispatch(logOutUser());\n  };\n\n  useScrollBar(boardWrapper, true, {scrollbars : {autoHide: \"l\"}});\n\n  return (\n    <nav>\n      <section className={st.sectionTop}>\n        <div className={st.container}>\n          <div className={st.logoWrap}>\n            <LogoComponent />\n            <p className={st.logoText}>Task Pro</p>\n          </div>\n\n          <p className={st.boardsTitle}>My boards</p>\n          <div className={st.createBoard}>\n            <p>Create a new board</p>\n            <button\n              type=\"button\"\n              className={st.buttonCreate}\n              onClick={handleAddBoard}\n            >\n              <Icon name={'icon-btn-plus'} width={20} height={20} />\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionBoards}>\n        <div ref={boardWrapper} className='boardScroll'>\n        <ul className={st.boardsList}>\n          {boards?.map(el => {\n            const iconName = theme !== 'light' ? el.icon : `${el.icon}-white`;\n            return (\n              <li\n                key={el._id}\n                className={clsx(st.boardItem, el._id === activeItemId && st.boardItemActive)}\n                onClick={() => handleChangeActive(el._id, el.title)}\n              >\n                <div className={st.boardName}>\n                  <Icon\n                    name={iconName}\n                    width={18}\n                    height={18}\n                    className={st.boardNameIcon}\n                  />\n                  <p>{el.title}</p>\n                </div>\n                {el._id === activeItemId && (\n                  <>\n                    <div className={st.boardEditIcons}>\n                      <IconBtn\n                        name=\"icon-pencil\"\n                        width={16}\n                        height={16}\n                        secondaryClassName={clsx(\n                          theme === 'violet' && st.icons\n                        )}\n                        onClick={() => handleEditBoard(el._id)}\n                      />\n                      <IconBtn\n                        name=\"icon-trash\"\n                        width={16}\n                        height={16}\n                        secondaryClassName={clsx(\n                          theme === 'violet' && st.icons\n                        )}\n                        onClick={() => handleDeleteModal()}\n                      />\n                    </div>\n                  </>\n                )}\n              </li>\n            );\n          })}\n          </ul>\n        </div>\n      </section>\n      <section className={st.sectionHelp}>\n        <div className={st.container}>\n          <div className={st.helpWrapper}>\n            <img src={cactus} alt=\"cactus\" className={st.helpCactus} />\n            <p className={clsx(st.helpText, theme === 'violet' && st.violet)}>\n              If you need help with <br />\n              <span> TaskPro</span>, check out our support resources or reach\n              out to our customer support team.\n            </p>\n            <button className={st.helpSend} onClick={handleNeedHelp}>\n              <Icon\n                name={'icon-help-circle'}\n                width={20}\n                height={20}\n                secobdaryClassName={st.helpIcon}\n              />\n              Need help?\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionLogOut}>\n        <div className={st.container}>\n          <button className={st.btnLogout} onClick={handleLogout}>\n            <Icon\n              name={'icon-iconlogout'}\n              width={32}\n              height={32}\n              secondaryClassName={clsx(theme === 'violet' && st.violet)}\n            />\n            Log out\n          </button>\n        </div>\n      </section>\n      {addBoardModal && (\n        <Modal title={'New board'} closeModal={handleAddBoard}>\n          <NewBoard closeModal={handleAddBoard} />\n        </Modal>\n      )}\n      {needHelpModalOpen && (\n        <Modal title=\"Need help\" closeModal={handleNeedHelp}>\n          <NeedHelp closeModal={handleNeedHelp} />\n        </Modal>\n      )}\n      {editBoardModal && (\n        <Modal title=\"Edit board\" closeModal={handleEditBoardModal}>\n          <EditBoard\n            closeModal={handleEditBoardModal}\n            boardToEdit={boardToEdit}\n          />\n        </Modal>\n      )}\n      {deleteModal && (\n        <Modal title=\"Are you sure ?\" closeModal={handleDeleteModal}>\n          <ButtonDelete\n            onClick={() => {\n              handleDeleteBoard(currentBoard);\n              handleDeleteModal();\n            }}\n          />\n        </Modal>\n      )}\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"welcomePageContainer\":\"WelcomePageBoard_welcomePageContainer__t0FrL\",\"welcomePage\":\"WelcomePageBoard_welcomePage__bfwyS\",\"welcomeContainerDiscription\":\"WelcomePageBoard_welcomeContainerDiscription__Z4B6z\",\"welcomeDiscription\":\"WelcomePageBoard_welcomeDiscription__BuMbu\",\"createBoardLink\":\"WelcomePageBoard_createBoardLink__KmUes\"};","import Modal from \"components/Modal/Modal\";\nimport Filters from \"../Filters/Filters\";\nimport s from './WelcomePageBoard.module.scss';\nimport NewBoard from \"components/Forms/NewBoardAndEditBoard/NewBoardForm\";\nimport { useState } from \"react\";\n\nconst WelcomePageBoard = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCreateBoardClick = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div className={s.welcomePageContainer}>\n      <div className={s.welcomePage}>\n        <Filters />\n      </div>\n      <div className={s.welcomeContainerDiscription}>\n        <p className={s.welcomeDiscription}>\n        Before starting your project, it is essential {\" \"}<span className={s.createBoardLink} onClick={handleCreateBoardClick}>to create a board</span>{\" \"} to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n        </p>\n      </div>\n      {showModal && (\n        <Modal title=\"New board\" closeModal={handleCloseModal}>\n          <NewBoard />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default WelcomePageBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"hidden\":\"HomePage_hidden__zxuF6\",\"sideBarBackDrop\":\"HomePage_sideBarBackDrop__b987A\",\"showMobile\":\"HomePage_showMobile__g2GpM\",\"sideBar\":\"HomePage_sideBar__W15jR\",\"sideBarOpen\":\"HomePage_sideBarOpen__V9qKB HomePage_sideBar__W15jR\",\"homeWrap\":\"HomePage_homeWrap__4oaan\",\"screenWrap\":\"HomePage_screenWrap__vfEGW\"};","import { Outlet } from 'react-router-dom';\nimport { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { Header } from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { toggleSidebar } from 'redux/board/boardOperations';\nimport { getAllTasks } from 'redux/board/boardOperations';\nimport WelcomePageBoard from 'components/Bord/WelcomePageBoard/WelcomePageBoard';\nimport { selectBoards } from 'redux/board/boardSelectors';\nimport { Container } from '@mui/joy';\nimport { selectIsSidebar } from 'redux/board/boardSelectors';\nimport clsx from 'clsx';\nimport s from './HomePage.module.scss';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n  const isMobileOpen = useSelector(selectIsSidebar);\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n  }, [dispatch]);\n\n  const closeMobileOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(toggleSidebar(false));\n    }\n  };\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        <div className={s.homeWrap}>\n          {isDesktop && (\n            <div className={s.sideBar}>\n              <Sidebar />\n            </div>\n          )}\n\n          <div className={s.screenWrap}>\n            <Header />\n            {boards.length > 0 ? (\n              <Outlet />\n            ) : (\n              <Container className={s.containerWelcomeDashboard}>\n                <Outlet />\n                <WelcomePageBoard />\n              </Container>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={clsx(s.sideBarBackDrop, isMobileOpen && s.showMobile)}\n          onClick={e => closeMobileOnBackdrop(e)}\n        >\n          <div className={s.sideBarOpen}>\n            <Sidebar />\n          </div>\n        </div>\n      </Suspense>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["OutsideClicker","props","ref","wrapperRef","useRef","setActive","isActive","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsx","children","SelectTheme","_ref","_clsx","_clsx2","_clsx3","selectHandler","userTheme","setSelectedTheme","_useState","useState","_useState2","_slicedToArray","handleClick","evtParent","currentTarget","parentElement","classList","toggle","themeCheckHandler","length","className","css","_jsxs","onClick","clsx","href","sprite","theme","innerText","toLowerCase","handleSelect","_defineProperty","Profile","modalHandler","avatar","userAvatar","name","useSelector","selectName","src","concat","alt","schema","yup","shape","min","max","required","email","password","ProfileModal","image","setImage","_useState3","_useState4","showPass","setShowPass","dispatch","useDispatch","userObj","selectUser","InitalVelues","formData","FormData","append","size","alert","updateAvatar","htmlFor","id","type","accept","placeholder","onChange","evt","files","Formik","initialValues","validationSchema","onSubmit","values","_ref2","resetForm","updateUser","Form","InputField","value","Field","ErrorMessage","component","themes","dark","primaryBackground","secondaryBackground","headerBackground","primaryTextColor","secondaryTextColor","boardHeaders","btnBg","btnTextColor","selectHeader","selectOption","selectListBg","selectListBorder","modalBackground","btnModalIconPlus","btnModalBg","btnModalTextColor","cardBg","boardAddColumnBtn","boardAddColumnPlus","headerModalBtnAddFile","sidebarBoardActiveBg","sidebarHelpWrapperBg","sidebarButtonCreateBg","sidebarButtonIconPlus","sidebarBoardItemHover","sidebarTextColorMain","btnHoverMain","btnActiveMain","btnHoverSecondary","btnActiveSecondary","sidebarTextColorSecondary","priorityWithoutPriority","scrollHandler","scrollTrack","light","violet","root","querySelector","style","setProperty","Header","selectUserTheme","selectUserAvatar","selectAvatar","selectedTheme","isModalOpen","setIsModalOpen","switchTheme","toggleSidebar","Modal","title","closeModal","LogoComponent","st","Icon","width","height","secondaryClassName","initialsValue","icon","setIcon","bg","setBg","createNewBoard","background","s","RadioGroup","orientation","variant","sx","marginBottom","border","gap","map","item","Box","position","display","justifyContent","alignItems","Radio","disableIcon","overlay","label","colors","hexagon","project","container","lightnight","loading","puzzle","star","backgroundColor","slotProps","input","action","borderRadius","transition","lineHeight","flexWrap","defaultBg","BgIcon","defaultBgWhite","flowers","leaves","mountainsAndBalloon","nature","oceanAndYacht","orangePlanet","planets","rocksAndOcean","sakura","sky","skyBalloons","starsAndShine","trailerInTheCanyon","yacht","youngMonth","outline","zIndex","ButtonModalWithIcon","text","comment","trim","autoComplete","as","boardToEdit","currentBoardId","selectCurrentBoardId","updateBoardById","data","Sidebar","boards","selectBoards","isLoggedIn","currentBoard","navigate","useNavigate","addBoardModal","setAddBoardModal","needHelpModalOpen","setNeedHelpModalOpen","_useState5","_useState6","editBoardModal","setEditBoardModal","_useState7","_useState8","deleteModal","setDeleteModal","_useState9","_useState10","activeItemId","setActiveItemId","_useState11","_useState12","setBoardToEdit","boardWrapper","getAllBoards","_id","newTitle","split","join","getBoardById","handleAddBoard","handleNeedHelp","handleEditBoardModal","handleDeleteModal","useScrollBar","scrollbars","autoHide","el","iconName","handleChangeActive","_Fragment","IconBtn","filter","secobdaryClassName","logOutUser","NewBoard","NeedHelp","EditBoard","ButtonDelete","deleteBoardById","showModal","setShowModal","Filters","isDesktop","useMediaQuery","minWidth","isMobileOpen","selectIsSidebar","getAllTasks","Suspense","fallback","Outlet","Container","WelcomePageBoard","e","closeMobileOnBackdrop"],"sourceRoot":""}